<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.3</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <groupId>com.unicorn</groupId>
    <artifactId>store-spring</artifactId>
    <version>1.0.0</version>
    <name>store</name>
    <description>Unicorn storage service</description>
    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.30.11</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency><!-- overriding https://github.com/testcontainers/testcontainers-java/issues/8338 -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>1.27.1</version>
                <scope>runtime</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- Spring Boot dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- AWS SDK dependencies -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>eventbridge</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>sts</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>dynamodb</artifactId>
        </dependency>
        <!-- PostgreSQL driver dependencies -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Testcontainers dependencies -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>localstack</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Rest assured dependencies -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <pluginRepositories>
        <pluginRepository>
            <id>graalvm-native-build-tools-snapshots</id>
            <name>GraalVM native-build-tools Snapshots</name>
            <url>https://raw.githubusercontent.com/graalvm/native-build-tools/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>otel-manual</id>
            <dependencies>
                <dependency>
                    <groupId>io.opentelemetry.instrumentation</groupId>
                    <artifactId>opentelemetry-spring-boot-starter</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry.instrumentation</groupId>
                    <artifactId>opentelemetry-aws-sdk-2.2</artifactId>
                    <version>2.13.2-alpha</version>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry.contrib</groupId>
                    <artifactId>opentelemetry-aws-xray</artifactId>
                    <version>1.43.0</version>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry.contrib</groupId>
                    <artifactId>opentelemetry-aws-xray-propagator</artifactId>
                    <version>1.43.0-alpha</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>0.10.5</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>test-native</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <metadataRepository>
                                <enabled>true</enabled>
                            </metadataRepository>
                            <requiredVersion>21</requiredVersion><!-- Spring Boot parent defines 22.3 -->
                            <buildArgs>
                                <arg>--verbose</arg>
                                <arg>
                                    --initialize-at-build-time=org.apache.commons.logging.LogFactory,org.apache.commons.logging.LogFactoryService
                                </arg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>soci</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <layers>
                                <enabled>true</enabled>
                            </layers>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>buildpacks</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <image>
                                <name>unicorn-store-spring:latest</name>
                                <buildpacks>
                                    <buildpack>gcr.io/paketo-buildpacks/amazon-corretto:9.0.1</buildpack>
                                    <buildpack>gcr.io/paketo-buildpacks/java:17.6.0</buildpack>
                                    <buildpack>gcr.io/paketo-buildpacks/syft:2.7.0</buildpack>
                                    <buildpack>gcr.io/paketo-buildpacks/spring-boot:5.32.0</buildpack>
                                    <buildpack>gcr.io/paketo-buildpacks/executable-jar:6.12.0</buildpack>
                                </buildpacks>
                                <env>
                                    <SPRING_DATASOURCE_URL>${env.SPRING_DATASOURCE_URL}</SPRING_DATASOURCE_URL>
                                    <SPRING_DATASOURCE_PASSWORD>${env.SPRING_DATASOURCE_PASSWORD}</SPRING_DATASOURCE_PASSWORD>
                                    <BP_JVM_VERSION>21</BP_JVM_VERSION>
                                    <BP_JVM_CDS_ENABLED>true</BP_JVM_CDS_ENABLED>
                                    <BP_SPRING_AOT_ENABLED>true</BP_SPRING_AOT_ENABLED>
                                </env>
                            </image>
                    </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jvm</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>repackage</id>
                                <configuration>
                                    <classifier>exec</classifier>
                                    <mainClass>com.unicorn.store.StoreApplication</mainClass>
                                    <layout>JAR</layout>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.4.4</version>
                        <configuration>
                            <from>
                                <image>public.ecr.aws/docker/library/amazoncorretto:21-alpine</image>
                            </from>
                            <container>
                                <user>1000</user>
                            </container>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
